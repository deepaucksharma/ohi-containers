name: Docker Validation Framework Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  linux-tests:
    name: Run Tests on Linux
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        
      - name: Set up Docker Compose
        run: |
          # Install Docker Compose if not available
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          docker-compose --version
        
      - name: Verify Docker installation
        run: docker --version
        
      - name: Set up test environment
        run: |
          chmod +x bin/*.sh lib/*.sh tests/unit/*.sh tests/image_validation/*.sh bin/unified/*.sh
          
      - name: Run unit tests
        run: |
          docker run --rm -v ${{ github.workspace }}:/app alpine:latest sh -c "cd /app && chmod +x /app/lib/*.sh /app/tests/unit/*.sh && /app/tests/unit/environment_test.sh"
        
      - name: Run image validation tests
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -v /var/run/docker.sock:/var/run/docker.sock alpine:latest sh -c "cd /app && apk add --no-cache docker-cli && chmod +x /app/lib/*.sh /app/tests/image_validation/*.sh && /app/tests/image_validation/layer_test.sh"
      
      - name: Run integration tests
        run: |
          docker-compose up -d
          docker-compose ps
          docker-compose run test-runner
          docker-compose down
          
      - name: Run unified tests
        run: |
          chmod +x bin/unified/test-runner.sh
          ./bin/unified/test-runner.sh --verbose
          
  windows-tests:
    name: Run Tests on Windows
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      
      - name: Verify Docker installation
        run: docker --version
        
      - name: Set file permissions
        shell: bash
        run: |
          chmod +x bin/*.sh lib/*.sh tests/unit/*.sh tests/image_validation/*.sh bin/unified/*.sh
      
      - name: Run unit tests in Docker
        shell: bash
        run: |
          docker run --rm -v "$(pwd):/app" alpine:latest sh -c "cd /app && chmod +x /app/lib/*.sh /app/tests/unit/*.sh && /app/tests/unit/environment_test.sh"
    
      - name: Run image validation tests in Docker
        shell: bash
        run: |
          docker run --rm -v "$(pwd):/app" -v //var/run/docker.sock:/var/run/docker.sock alpine:latest sh -c "cd /app && apk add --no-cache docker-cli && chmod +x /app/lib/*.sh /app/tests/image_validation/*.sh && /app/tests/image_validation/layer_test.sh"
          
      - name: Run unified tests
        shell: bash
        run: |
          echo "Running tests with unified test runner"
          chmod +x ./bin/unified/test-runner.sh
          ./bin/unified/test-runner.sh --verbose
